services:
    Ynlo\GraphQLBundle\Controller\GraphQLEndpointController:
        public: true
        arguments:
            - '@Ynlo\GraphQLBundle\Security\EndpointResolver'
            - '@Ynlo\GraphQLBundle\Schema\SchemaCompiler'
        calls:
            - [ addGlobalValidationRules, ['%graphql.security.validation_rules%'] ]
            - [ setDebug, ['%kernel.debug%'] ]
            - [ setMiddlewares, [!tagged graphql.middleware] ]
            - [ setLogger, ['@?monolog.logger'] ]
            - [ setConfig, ['%graphql.config%'] ]
            - [ setDispatcher, ['@event_dispatcher'] ]

    Ynlo\GraphQLBundle\Request\StandardGraphQLRequestMiddleware:
         public: true
         tags:
            - { name: 'graphql.middleware' }

    Ynlo\GraphQLBundle\Request\SubscriptionsRequestMiddleware:
        public: true
        arguments: ['%kernel.secret%']
        tags:
            - { name: 'graphql.middleware' }

    Ynlo\GraphQLBundle\Request\MultiPartFileUploadMiddleware:
         public: true
         tags:
            - { name: 'graphql.middleware' }

    Ynlo\GraphQLBundle\Controller\ExplorerController:
        public: true
        calls:
            - ['setContainer', ['@service_container']]
        arguments:
            - '%graphql.graphiql%'
            - ~ # <--- configured in ControllerPass --->

    Ynlo\GraphQLBundle\Controller\SchemaController:
        public: true
        arguments:
          - '@Ynlo\GraphQLBundle\Schema\SchemaExporter'
          - '@Ynlo\GraphQLBundle\Security\EndpointResolver'

    Ynlo\GraphQLBundle\Component\AutoWire\AutoWire:
        public: true
        calls:
            - [ setContainer, ['@service_container']]

    Ynlo\GraphQLBundle\EventListener\CorsListener:
        public: true
        arguments: ['%graphql.cors_config%']
        tags:
            - { name: 'kernel.event_subscriber' }

    Ynlo\GraphQLBundle\Schema\SchemaCompiler:
        public: true
        arguments: ['@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry']
        calls:
            - [ setContainer, ['@service_container']]

    Ynlo\GraphQLBundle\Schema\SchemaExporter:
        arguments: ['@Ynlo\GraphQLBundle\Schema\SchemaCompiler']

    Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry:
        public: true
        arguments:
            - '@cache.graphql'
            - !tagged graphql.definition_loader
            - !tagged graphql.definition_plugin
            - '%graphql.endpoints%'
        calls:
            - [setContainer, ['@service_container']]

    Ynlo\GraphQLBundle\Definition\Loader\AnnotationLoader:
        public: true
        arguments: ['@kernel','@annotation_reader', !tagged graphql.definition_annotation_parser]
        tags:
            - { name: 'graphql.definition_loader' }

    Ynlo\GraphQLBundle\Definition\Loader\DoctrineEnumLoader:
        public: true
        arguments: ['@doctrine']
        tags:
            - { name: 'graphql.definition_loader' }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\ObjectTypeAnnotationParser:
        arguments: ['@annotations.reader', !tagged graphql.field_definition_decorator]
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 200}

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\QueryAnnotationParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\QueryListAnnotationParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationAnnotationParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\SubscriptionAnnotationParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationAddUpdateAnnotationParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationDeleteAnnotationParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationDeleteBatchAnnotationParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\CRUDAnnotationParser:
        arguments:
            - '@Ynlo\GraphQLBundle\Definition\Loader\Annotation\QueryAnnotationParser'
            - '@Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationAnnotationParser'
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_annotation_parser' }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\StandaloneFieldParser:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.definition_annotation_parser', priority: 50 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\FieldDecorator\GraphQLFieldDefinitionDecorator:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.field_definition_decorator' }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\FieldDecorator\DoctrineFieldDefinitionDecorator:
        arguments: ['@annotations.reader']
        tags:
            - { name: 'graphql.field_definition_decorator', priority: 50 }

    Ynlo\GraphQLBundle\Type\Loader\TypeAutoLoader:
        public: true
        arguments:
            - '@kernel'
            - '@cache.graphql'
        tags:
            - { name: 'kernel.cache_warmer', priority: 200 }

    Ynlo\GraphQLBundle\Form\TypeGuesser\GraphQLIDTypeGuesser:
        public: true
        arguments: ['@annotations.reader']
        tags:
            - { name: 'form.type_guesser' }

    Ynlo\GraphQLBundle\Form\TypeGuesser\GraphQLEnumTypeGuesser:
        public: true
        arguments: ['@annotations.reader', '@doctrine', "%doctrine.dbal.connection_factory.types%"]
        tags:
            - { name: 'form.type_guesser', priority: 10}

    # this alias is required to override Fresh\DoctrineEnumBundle\Form\EnumTypeGuesser
    enum_type_guesser:
        alias: Ynlo\GraphQLBundle\Form\TypeGuesser\GraphQLEnumTypeGuesser

    Ynlo\GraphQLBundle\Form\TypeGuesser\DoctrineOrmTypeGuesser:
        public: true
        arguments: ['@doctrine']
        tags:
            - { name: 'form.type_guesser'}

    # this alias is required to override Fresh\DoctrineEnumBundle\Form\EnumTypeGuesser
    form.type_guesser.doctrine:
         alias: Ynlo\GraphQLBundle\Form\TypeGuesser\DoctrineOrmTypeGuesser

    Ynlo\GraphQLBundle\Form\Type\IDType:
        public: true
        arguments:
            - '@Doctrine\ORM\EntityManagerInterface'
            - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'
        tags: [form.type]

    Ynlo\GraphQLBundle\Form\Extension\GraphQLExtensionType:
        tags:
          - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType }

    Ynlo\GraphQLBundle\Extension\ExtensionManager:
        public: true
        arguments: [!tagged graphql.extension]

    Ynlo\GraphQLBundle\Definition\Plugin\PaginationDefinitionPlugin:
        public: true
        arguments: ['@Ynlo\GraphQLBundle\Filter\FilterFactory','%graphql.pagination%']
        tags:
            - { name: 'graphql.definition_plugin'}

    Ynlo\GraphQLBundle\Definition\Plugin\MutationFormResolverPlugin:
        public: true
        arguments:
            - '@form.factory'
            - !tagged graphql.input_type_guesser
        tags:
            - { name: 'graphql.definition_plugin'}

    Ynlo\GraphQLBundle\Definition\Plugin\EndpointsDefinitionPlugin:
        public: true
        arguments: ['%graphql.endpoints%']
        tags:
            - { name: 'graphql.definition_plugin', priority: 200 }

    Ynlo\GraphQLBundle\Definition\Plugin\CleanUpDefinitionPlugin:
        tags:
            - { name: 'graphql.definition_plugin', priority: -250 }

    Ynlo\GraphQLBundle\Definition\Plugin\CRUDExtensionResolverPlugin:
        public: true
        tags:
            - { name: 'graphql.definition_plugin'}

    Ynlo\GraphQLBundle\Definition\Plugin\AccessControlDefinitionPlugin:
        tags:
            - { name: 'graphql.definition_plugin'}

    Ynlo\GraphQLBundle\Definition\Plugin\SchemaValidatorDefinitionPlugin:
        tags:
            - { name: 'graphql.definition_plugin', priority: -250}

    Ynlo\GraphQLBundle\Definition\Plugin\ConstraintViolationsDefinitionPlugin:
        public: true
        arguments: ['%graphql.error_handling%']
        tags:
            - { name: 'graphql.definition_plugin', priority: 300}

    Ynlo\GraphQLBundle\Definition\Plugin\NamespaceDefinitionPlugin:
        public: true
        arguments: ['%graphql.namespaces%']
        tags:
            - { name: 'graphql.definition_plugin', priority: -200}

    Ynlo\GraphQLBundle\Definition\Plugin\ReorderDefinitionsPlugin:
        public: true
        tags:
            - { name: 'graphql.definition_plugin', priority: -210}

    Ynlo\GraphQLBundle\GraphiQL\JWTGraphiQLAuthentication:
        public: true
        arguments: ['@router','@session','%graphql.graphiql_auth_jwt%']

    Ynlo\GraphQLBundle\GraphiQL\LexikJWTGraphiQLAuthenticator:
        public: true
        arguments:
            - '@security.user_password_encoder.generic'
            - ~ # injected in extension
            - '@lexik_jwt_authentication.jwt_manager'
            - '@session'
        calls:
            - ['setConfig', ['%graphql.graphiql_auth_lexik_jwt%']]
            - ['setAuthenticationSuccessHandler', ['@lexik_jwt_authentication.handler.authentication_success']]

    Ynlo\GraphQLBundle\Cache\DefinitionCacheWarmer:
        public: false
        arguments: ['@kernel','@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry']
        tags:
            - { name: 'kernel.cache_warmer', priority: 200 }

    Ynlo\GraphQLBundle\Resolver\DeferredBuffer:
        public: true
        arguments: ['@doctrine']

    Ynlo\GraphQLBundle\DataCollector\GraphQLDataCollector:
        arguments:
          - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'
          - '@Ynlo\GraphQLBundle\Security\EndpointResolver'
        tags:
          - { name: 'data_collector',template: '@YnloGraphQL/data_collector/template.html.twig',  id: 'graphql' }

    Ynlo\GraphQLBundle\Security\EndpointResolver:
        arguments:
            - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'
            - '@security.authorization_checker'
            - '%graphql.endpoints%'

    Ynlo\GraphQLBundle\Resolver\ResolverServices:
        public: true
        calls:
            - ['setDoctrine', ['@doctrine'] ]
            - ['setValidator', ['@validator'] ]
            - ['setEventDispatcher', ['@?event_dispatcher'] ]
            - ['setFormFactory', ['@form.factory'] ]

    Symfony\Component\EventDispatcher\EventDispatcherInterface:
        alias: event_dispatcher
        public: true

    Ynlo\GraphQLBundle\Security\Authorization\AccessControlChecker:
        arguments: ['@security.authorization_checker']

    Ynlo\GraphQLBundle\EventListener\GraphQL\AccessControlListener:
        arguments: ['@Ynlo\GraphQLBundle\Security\Authorization\AccessControlChecker']
        tags:
            - { name: 'kernel.event_subscriber' }

    Ynlo\GraphQLBundle\EventListener\GraphQL\NodeDeferredListener:
        arguments: ['@Ynlo\GraphQLBundle\Resolver\DeferredBuffer']
        tags:
            - { name: 'kernel.event_subscriber' }

    Ynlo\GraphQLBundle\EventListener\GraphQL\FieldConcurrentUsageListener:
        tags:
            - { name: 'kernel.event_subscriber' }

    Ynlo\GraphQLBundle\Encoder\IDEncoderManager:
        public: true
        arguments: [''] #inject in the extension builder

    Ynlo\GraphQLBundle\Encoder\SimpleIDEncoder:
        arguments:
            - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'
            - '@doctrine'

    Ynlo\GraphQLBundle\Encoder\Base64IDEncoder:
        arguments:
            - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'
            - '@doctrine'

    Ynlo\GraphQLBundle\Encoder\SecureIDEncoder:
        arguments:
            - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'
            - '@doctrine'
            - '%kernel.secret%'

    Ynlo\GraphQLBundle\Command\SchemaExportCommand:
        arguments:
            - '@Ynlo\GraphQLBundle\Schema\SchemaExporter'
            - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'
        tags:
            - 'console.command'

    Ynlo\GraphQLBundle\Schema\SchemaSnapshot:
        public: true
        arguments:
            - '@Ynlo\GraphQLBundle\Schema\SchemaCompiler'

    Ynlo\GraphQLBundle\Command\SchemaSnapshotCommand:
        arguments:
            - '@Ynlo\GraphQLBundle\Schema\SchemaSnapshot'
            - '%graphql.endpoints_list%'
            - '%kernel.project_dir%'
        tags:
            - 'console.command'

    Ynlo\GraphQLBundle\Command\MercureHubCommand:
        arguments:
            - '@Ynlo\GraphQLBundle\Subscription\SubscriptionManager'
            - '%kernel.debug%'
        tags:
            - 'console.command'
        calls:
            - [ setLogger, ['@?monolog.logger'] ]

    Ynlo\GraphQLBundle\Error\DefaultErrorFormatter:
       arguments:
          - '@Ynlo\GraphQLBundle\Error\ControlledErrorManager'

    Ynlo\GraphQLBundle\Error\ErrorFormatterInterface:
       alias: Ynlo\GraphQLBundle\Error\DefaultErrorFormatter

    Ynlo\GraphQLBundle\Error\DefaultErrorHandler:
       arguments:
          - '@?monolog.logger'

    Ynlo\GraphQLBundle\Error\ErrorHandlerInterface:
       alias: Ynlo\GraphQLBundle\Error\DefaultErrorHandler

    Ynlo\GraphQLBundle\Command\ControlledErrorCommand:
        arguments:
            - '@Ynlo\GraphQLBundle\Error\ControlledErrorManager'
            - !tagged graphql.error_list_exporter
        tags:
            - 'console.command'

    Ynlo\GraphQLBundle\Error\Exporter\ConsoleTableExporter:
        tags:
            - graphql.error_list_exporter

    Ynlo\GraphQLBundle\Error\Exporter\MarkdownTableExporter:
        tags:
            - graphql.error_list_exporter

    Ynlo\GraphQLBundle\Error\ControlledErrorManager:
        arguments:
          - '@kernel'
          - '@cache.graphql'
          - '%graphql.error_handling.controlled_errors%'
        tags:
            - { name: 'kernel.cache_warmer', priority: 200 }

    Ynlo\GraphQLBundle\EventListener\JWT\AuthenticationFailureListener:
        arguments:
          - '@Ynlo\GraphQLBundle\Error\ErrorFormatterInterface'
          - '@Ynlo\GraphQLBundle\Error\ErrorHandlerInterface'
        calls:
          - [setDebug, ['%kernel.debug%']]
          - [setJWTCompatibility, ['%graphql.error_handling.jwt_auth_failure_compatibility%']]
        tags:
          - kernel.event_subscriber

    Ynlo\GraphQLBundle\Form\Input\GraphQLInputTypeGuesser:
        tags:
          - graphql.input_type_guesser

    Ynlo\GraphQLBundle\Form\Input\SymfonyFormInputTypeGuesser:
        tags:
          - graphql.input_type_guesser

    Ynlo\GraphQLBundle\Filter\FilterFactory:
        arguments:
          - !tagged graphql.filter_resolver
          - '@Ynlo\GraphQLBundle\Definition\Plugin\EndpointsDefinitionPlugin'

    Ynlo\GraphQLBundle\Filter\Resolver\DoctrineORMFilterResolver:
        arguments: ['@Doctrine\ORM\EntityManagerInterface']
        tags:
          - { name: graphql.filter_resolver, priority: -100 }

    Ynlo\GraphQLBundle\Filter\Resolver\NamingConventionFilterResolver:
        arguments: ['@kernel', '@annotations.reader' ]
        tags:
          - graphql.filter_resolver

    Ynlo\GraphQLBundle\Filter\Resolver\CustomGenericFilterResolver:
        arguments: ['@annotations.reader' ]
        tags:
          - graphql.filter_resolver

    Ynlo\GraphQLBundle\Subscription\Subscriber:
        public: true
        arguments: ['@request_stack','@?Ynlo\GraphQLBundle\Subscription\SubscriptionManager']
        tags:
            - kernel.event_subscriber

    Ynlo\GraphQLBundle\Subscription\Publisher:
        arguments: ['@?Ynlo\GraphQLBundle\Subscription\SubscriptionManager', '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry']

    Ynlo\GraphQLBundle\Subscription\SubscriptionManager:
        arguments:
            - '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry'

    Ynlo\GraphQLBundle\Subscription\SubscriptionPublishHandler:
        arguments: # dpi
        tags: [messenger.message_handler]
        calls:
            - [ setLogger, ['@?monolog.logger'] ]

    Ynlo\GraphQLBundle\Subscription\SubscriptionUpdateHandler:
        arguments:
            - '%kernel.secret%'
        tags: [messenger.message_handler]
        calls:
            - [ setLogger, ['@?monolog.logger'] ]

    Ynlo\GraphQLBundle\Subscription\Bucket\RedisSubscriptionBucket:
        arguments:
            - '%graphql.subscriptions.redis%'

    Ynlo\GraphQLBundle\Subscription\Bucket\LocalSubscriptionBucket:
        arguments:
            - '@cache.app'

# Security User ---------

    Ynlo\GraphQLBundle\Security\User\UserManagerInterface:
        alias: Ynlo\GraphQLBundle\Doctrine\UserManager

    Ynlo\GraphQLBundle\Security\User\UserProvider:
        arguments:
            - '@Ynlo\GraphQLBundle\Security\User\UserManagerInterface'

    Ynlo\GraphQLBundle\Doctrine\UserManager:
        arguments:
            - '@Ynlo\GraphQLBundle\Security\User\PasswordUpdater'
            - '@Doctrine\ORM\EntityManagerInterface'
            # class param injected using DI

    Ynlo\GraphQLBundle\Security\User\PasswordUpdater:
        arguments:
            - '@security.encoder_factory'

    Ynlo\GraphQLBundle\Doctrine\UserListener:
        arguments:
            - '@Ynlo\GraphQLBundle\Security\User\UserManagerInterface'
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    Ynlo\GraphQLBundle\Security\User\LastLoginListener:
        arguments:
            - '@Ynlo\GraphQLBundle\Security\User\UserManagerInterface'
        tags:
            - { name: kernel.event_subscriber }

    Ynlo\GraphQLBundle\Elastic\ElasticRepositoryManager:
        public: true
        arguments:
          - '@FOS\ElasticaBundle\Manager\RepositoryManagerInterface'

    Ynlo\GraphQLBundle\Filter\Common\NodeFilter:
        public: true
        arguments:
            - '@Doctrine\ORM\EntityManagerInterface'

    cache.graphql:
        parent: cache.system
        tags:
            - { name: cache.pool, clearer : cache.app_clearer }